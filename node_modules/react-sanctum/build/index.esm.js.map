{"version":3,"file":"index.esm.js","sources":["../src/SanctumContext.tsx","../src/Sanctum.tsx","../src/withSanctum.tsx","../src/useSanctum.ts"],"sourcesContent":["import * as React from \"react\";\n\nexport interface ContextProps {\n  user: null | any;\n  authenticated: null | boolean;\n  signIn: (\n    username: string,\n    password: string,\n    remember?: boolean\n  ) => Promise<{ twoFactor: boolean; signedIn: boolean }>;\n  signOut: () => Promise<void>;\n  twoFactorChallenge: (code: string, recovery?: boolean) => Promise<{}>;\n  setUser: (user: object, authenticated?: boolean) => void;\n  checkAuthentication: () => Promise<boolean>;\n}\n\nconst SanctumContext = React.createContext<ContextProps | undefined>(undefined);\n\nexport default SanctumContext;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport axios, { AxiosInstance } from \"axios\";\nimport SanctumContext from \"./SanctumContext\";\n\naxios.defaults.withCredentials = true;\n\nexport interface ConfigProps {\n  apiUrl: string;\n  csrfCookieRoute: string;\n  signInRoute: string;\n  signOutRoute: string;\n  userObjectRoute: string;\n  twoFactorChallengeRoute?: string;\n  axiosInstance?: AxiosInstance;\n  usernameKey?: string;\n}\n\ninterface Props {\n  config: ConfigProps;\n  checkOnInit?: boolean;\n  children: React.ReactNode;\n}\n\nconst Sanctum: React.FC<Props> = ({ checkOnInit = true, config, children }) => {\n  const localAxiosInstance = useMemo(\n    () => config.axiosInstance || axios.create(),\n    [config.axiosInstance]\n  );\n\n  const [sanctumState, setSanctumState] = useState<{\n    user: null | {};\n    authenticated: null | boolean;\n  }>({ user: null, authenticated: null });\n  const user = sanctumState.user;\n  const authenticated = sanctumState.authenticated;\n\n  useEffect(() => {\n    if (checkOnInit) {\n      checkAuthentication();\n    }\n  }, [checkOnInit]);\n\n  const csrf = () => {\n    const { apiUrl, csrfCookieRoute } = config;\n    return localAxiosInstance.get(`${apiUrl}/${csrfCookieRoute}`);\n  };\n\n  const signIn = (\n    username: string,\n    password: string,\n    remember: boolean = false\n  ): Promise<{ twoFactor: boolean; signedIn: boolean; user?: {} }> => {\n    const { apiUrl, signInRoute, usernameKey } = config;\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        // Get CSRF cookie.\n        await csrf();\n\n        // Sign in.\n        const { data: signInData } = await localAxiosInstance.post(\n          `${apiUrl}/${signInRoute}`,\n          {\n            [usernameKey || \"email\"]: username,\n            password,\n            remember: remember ? true : null,\n          },\n          {\n            maxRedirects: 0,\n          }\n        );\n\n        // Handle two factor.\n        if (typeof signInData === \"object\" && signInData.two_factor === true) {\n          return resolve({ twoFactor: true, signedIn: false });\n        }\n\n        // Fetch user.\n        const user = await revalidate();\n\n        return resolve({ twoFactor: false, signedIn: true, user });\n      } catch (error) {\n        return reject(error);\n      }\n    });\n  };\n\n  const twoFactorChallenge = (\n    code: string,\n    recovery: boolean = false\n  ): Promise<{}> => {\n    const { apiUrl, twoFactorChallengeRoute } = config;\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        // The user can either use their OTP token or use a recovery code.\n        const formData = recovery ? { recovery_code: code } : { code };\n\n        await localAxiosInstance.post(\n          `${apiUrl}/${twoFactorChallengeRoute}`,\n          formData\n        );\n\n        // Fetch user.\n        const user = await revalidate();\n\n        return resolve(user);\n      } catch (error) {\n        return reject(error);\n      }\n    });\n  };\n\n  const signOut = () => {\n    const { apiUrl, signOutRoute } = config;\n\n    return new Promise<void>(async (resolve, reject) => {\n      try {\n        await localAxiosInstance.post(`${apiUrl}/${signOutRoute}`);\n        // Only sign out after the server has successfully responded.\n        setSanctumState({ user: null, authenticated: false });\n        resolve();\n      } catch (error) {\n        return reject(error);\n      }\n    });\n  };\n\n  const setUser = (user: object, authenticated: boolean = true) => {\n    setSanctumState({ user, authenticated });\n  };\n\n  const revalidate = (): Promise<boolean | { user: {} }> => {\n    const { apiUrl, userObjectRoute } = config;\n    \n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await localAxiosInstance.get(\n          `${apiUrl}/${userObjectRoute}`,\n          {\n            maxRedirects: 0,\n          }\n        );\n\n        setUser(data);\n\n        resolve(data);\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          if (error.response && error.response.status === 401) {\n            // If there's a 401 error the user is not signed in.\n            setSanctumState({ user: null, authenticated: false });\n            return resolve(false);\n          } else {\n            // If there's any other error, something has gone wrong.\n            return reject(error);\n          }\n        } else {\n          return reject(error);\n        }\n      }\n    });\n  };\n\n  const checkAuthentication = (): Promise<boolean> => {\n    return new Promise(async (resolve, reject) => {\n      if (authenticated === null) {\n        // The status is null if we haven't checked it, so we have to make a request.\n        try {\n          await revalidate();\n          return resolve(true);\n        } catch (error) {\n          if (axios.isAxiosError(error)) {\n            if (error.response && error.response.status === 401) {\n              // If there's a 401 error the user is not signed in.\n              setSanctumState({ user: null, authenticated: false });\n              return resolve(false);\n            } else {\n              // If there's any other error, something has gone wrong.\n              return reject(error);\n            }\n          } else {\n            return reject(error);\n          }\n        }\n      } else {\n        // If it has been checked with the server before, we can just return the state.\n        return resolve(authenticated);\n      }\n    });\n  };\n\n  return (\n    <SanctumContext.Provider\n      children={children || null}\n      value={{\n        user,\n        authenticated,\n        signIn,\n        twoFactorChallenge,\n        signOut,\n        setUser,\n        checkAuthentication,\n      }}\n    />\n  );\n};\n\nexport default Sanctum;\n","import * as React from \"react\";\n\nimport SanctumContext from \"./SanctumContext\";\n\nconst withSanctum = (Component: React.ComponentType<any>) => {\n  const displayName = `withSanctum(${Component.displayName || Component.name})`;\n\n  const C = (props: any) => {\n    return (\n      <SanctumContext.Consumer>\n        {(context) => {\n          if (!context)\n            throw new Error(\n              `<${displayName} /> should only be used inside <Sanctum />`\n            );\n          return <Component {...props} {...context} />;\n        }}\n      </SanctumContext.Consumer>\n    );\n  };\n\n  C.displayName = displayName;\n\n  return C;\n};\n\nexport default withSanctum;\n","import * as React from \"react\";\n\nimport SanctumContext, { ContextProps } from \"./SanctumContext\";\n\ninterface useSanctumReturn<T> extends ContextProps {\n  user: T;\n}\n\nexport default function useSanctum<T = null | any>(): useSanctumReturn<T> {\n  const context = React.useContext(SanctumContext);\n  if (!context)\n    throw new Error(\"useSanctum should only be used inside <Sanctum />\");\n  return context;\n};\n\n"],"names":["React"],"mappings":"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"}